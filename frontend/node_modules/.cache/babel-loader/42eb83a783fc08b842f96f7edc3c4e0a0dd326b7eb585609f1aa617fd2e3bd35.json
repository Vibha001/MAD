{"ast":null,"code":"// import { onMounted, ref } from \"vue\";\nimport LogOutButton from \"./Logout.vue\";\nimport Book from \"../components/Book.vue\";\nexport default {\n  name: \"UserDash\",\n  components: {\n    LogOutButton,\n    Book\n  },\n  data() {\n    return {\n      username: \"\",\n      venues: [],\n      tagSearchQuery: \"\",\n      locationSearchQuery: \"\"\n    };\n  },\n  methods: {\n    async searchByTags() {\n      try {\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n          },\n          body: JSON.stringify({\n            tags: this.tagSearchQuery\n          })\n        };\n        const response = await fetch(\"http://127.0.0.1:8000/tag_result\", options);\n        const data = await response.json();\n        console.log(\"Search results by tags:\", data);\n        this.updateVenuesWithSearchResults(data);\n      } catch (error) {\n        console.error(\"Error searching by tags:\", error);\n      }\n    },\n    async searchByLocation() {\n      try {\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n          },\n          body: JSON.stringify({\n            location: this.locationSearchQuery\n          })\n        };\n        const response = await fetch(\"http://127.0.0.1:8000/loc_result\", options);\n        const data = await response.json();\n        console.log(\"Search results by location:\", data);\n        this.updateVenuesWithSearchResults(data);\n      } catch (error) {\n        console.error(\"Error searching by location:\", error);\n      }\n    },\n    updateVenuesWithSearchResults(searchResults) {\n      this.venues = searchResults;\n    },\n    async fetchData() {\n      try {\n        const storedData = localStorage.getItem(\"identity\");\n        if (storedData) {\n          const identityObject = JSON.parse(storedData);\n          this.username = identityObject.username;\n        }\n        const options = {\n          method: \"GET\",\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n          }\n        };\n        const response = await fetch(\"http://127.0.0.1:8000/getVandS\", options);\n        const data = await response.json();\n        console.log(\"got data from backend\", data);\n        this.venues = data;\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    },\n    handleBookingConfirmed(bookingData) {\n      console.log(\"Booking confirmed:\", bookingData);\n      const identityObject = JSON.parse(localStorage.getItem(\"identity\"));\n      const id = identityObject.id;\n      fetch(`http://127.0.0.1:8000/book/${id}`, {\n        method: \"POST\",\n        body: JSON.stringify(bookingData),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n        }\n      }).then(response => {\n        if (!response.ok) {\n          console.log(\"Unsupported Media Type\");\n        }\n        return response.json();\n      }).then(data => {\n        console.log(\"Show Booked:\", data);\n        const options = {\n          method: \"GET\",\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n          }\n        };\n        // fetch(\"http://127.0.0.1:8000/save_booking_time\", {\n        //     method: \"POST\",\n        //     body: JSON.stringify(user),\n        //     headers: {\n        //       \"Content-Type\": \"application/json\",\n        //     },\n        //   }).catch((error) => {\n        //     console.error(\"Fetch error:\", error);\n        //     // Handle the error or display it to the user\n        //   });\n        fetch(\"http://127.0.0.1:8000/getVandS\", options).then(response => response.json()).then(data => {\n          console.log(\"from backend\", data);\n          this.venues = data;\n        });\n      });\n    }\n  },\n  async mounted() {\n    console.log(\"User Dashboard\");\n    await this.fetchData();\n  }\n};","map":{"version":3,"names":["LogOutButton","Book","name","components","data","username","venues","tagSearchQuery","locationSearchQuery","methods","searchByTags","options","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","tags","response","fetch","json","console","log","updateVenuesWithSearchResults","error","searchByLocation","location","searchResults","fetchData","storedData","identityObject","parse","handleBookingConfirmed","bookingData","id","then","ok","mounted"],"sources":["src/views/UserDash.vue"],"sourcesContent":["<template>\n  <div class=\"container-fluid\">\n    <nav\n      class=\"navbar navbar-expand-lg navbar-light bg-light fixed-top\"\n      style=\"font-size: 24px; padding: 20px\"\n    >\n      <h4>{{ username }}'s Dashboard</h4>\n      |\n      <br />\n      <router-link to=\"/user_dashboard\"> User Dashboard </router-link> |<br />\n      <router-link to=\"/bookings\"> Bookings </router-link> |<br />\n      <router-link to=\"/profile\"> Profile </router-link> |<br />\n      <LogOutButton />\n    </nav>\n    <!-- Add a search bar for tags -->\n    <div class=\"input-group mb-3\">\n      <input\n        type=\"text\"\n        class=\"form-control py-2 rounded-pill mr-5 pr-5\"\n        placeholder=\"Search by tags\"\n        v-model=\"tagSearchQuery\"\n      />\n      <button\n        class=\"btn btn-outline-light text-dark border-0 rounded-pill ml-n5\"\n        @click=\"searchByTags\"\n      >\n        Search\n      </button>\n    </div>\n\n    <!-- Add a search bar for location -->\n    <div class=\"input-group mb-3\">\n      <input\n        type=\"text\"\n        class=\"form-control py-2 rounded-pill mr-1 pr-5\"\n        placeholder=\"Search by location\"\n        v-model=\"locationSearchQuery\"\n      />\n      <button\n        class=\"btn btn-outline-light text-dark border-0 rounded-pill ml-n5\"\n        @click=\"searchByLocation\"\n      >\n        Search\n      </button>\n    </div>\n    <div class=\"row\">\n      <div\n        class=\"col-12 my-4\"\n        v-for=\"(venue, venueId) in venues\"\n        :key=\"venueId\"\n      >\n        <!-- Skip rendering if no shows -->\n        <div v-if=\"venue.shows.length > 0\">\n          <div class=\"card\" style=\"width: 100%\">\n            <div class=\"card-body\">\n              <h5 class=\"card-title\">{{ venue.vname }}</h5>\n              <img\n                :src=\"'http://localhost:8000' + venue.vimage_url\"\n                alt=\"Venue Image\"\n              /><br /><br />\n\n              <h6 class=\"card-subtitle mb-2 text-muted\">\n                Location: {{ venue.vplace }}\n              </h6>\n\n              <!-- Show cards -->\n              <div class=\"row\">\n                <div\n                  class=\"col-md-6\"\n                  v-for=\"(show, showId) in venue.shows\"\n                  :key=\"showId\"\n                >\n                  <div\n                    class=\"my-4 mx-4 border border-2 border-secondary rounded-3\"\n                  >\n                    <h6 class=\"card-subtitle mb-2 text-muted\">\n                      Show Name: {{ show.sname }}\n                    </h6>\n                    <p class=\"card-text\">Tags: {{ show.stags }}</p>\n                    <p class=\"card-text\">Ticket Price: {{ show.sprice }}</p>\n                    <p class=\"card-text\">Show Timing: {{ show.time }}</p>\n\n                    <!-- Conditional rendering for Book and Housefull buttons -->\n                    <div v-if=\"show.seats - show.booked > 0\">\n                      <Book\n                        :id=\"Number(showId)\"\n                        :show=\"show\"\n                        :venue=\"venue\"\n                        ref=\"bookModal\"\n                        @booking-confirmed=\"handleBookingConfirmed\"\n                      />\n                    </div>\n                    <div v-else type=\"button\" class=\"btn btn-outline-danger\">\n                      Housefull\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n// import { onMounted, ref } from \"vue\";\nimport LogOutButton from \"./Logout.vue\";\nimport Book from \"../components/Book.vue\";\n\nexport default {\n  name: \"UserDash\",\n\n  components: {\n    LogOutButton,\n    Book,\n  },\n\n  data() {\n    return {\n      username: \"\",\n      venues: [],\n      tagSearchQuery: \"\",\n      locationSearchQuery: \"\",\n    };\n  },\n\n  methods: {\n    async searchByTags() {\n      try {\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n          body: JSON.stringify({ tags: this.tagSearchQuery }),\n        };\n\n        const response = await fetch(\n          \"http://127.0.0.1:8000/tag_result\",\n          options\n        );\n        const data = await response.json();\n\n        console.log(\"Search results by tags:\", data);\n        this.updateVenuesWithSearchResults(data);\n      } catch (error) {\n        console.error(\"Error searching by tags:\", error);\n      }\n    },\n\n    async searchByLocation() {\n      try {\n        const options = {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n          body: JSON.stringify({ location: this.locationSearchQuery }),\n        };\n\n        const response = await fetch(\n          \"http://127.0.0.1:8000/loc_result\",\n          options\n        );\n        const data = await response.json();\n\n        console.log(\"Search results by location:\", data);\n        this.updateVenuesWithSearchResults(data);\n      } catch (error) {\n        console.error(\"Error searching by location:\", error);\n      }\n    },\n\n    updateVenuesWithSearchResults(searchResults) {\n      this.venues = searchResults;\n    },\n\n    async fetchData() {\n      try {\n        const storedData = localStorage.getItem(\"identity\");\n        if (storedData) {\n          const identityObject = JSON.parse(storedData);\n          this.username = identityObject.username;\n        }\n\n        const options = {\n          method: \"GET\",\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n        };\n\n        const response = await fetch(\"http://127.0.0.1:8000/getVandS\", options);\n        const data = await response.json();\n\n        console.log(\"got data from backend\", data);\n        this.venues = data;\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    },\n\n    handleBookingConfirmed(bookingData) {\n      console.log(\"Booking confirmed:\", bookingData);\n      const identityObject = JSON.parse(localStorage.getItem(\"identity\"));\n\n      const id = identityObject.id;\n\n      fetch(`http://127.0.0.1:8000/book/${id}`, {\n        method: \"POST\",\n        body: JSON.stringify(bookingData),\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n        .then((response) => {\n          if (!response.ok) {\n            console.log(\"Unsupported Media Type\");\n          }\n          return response.json();\n        })\n        .then((data) => {\n          console.log(\"Show Booked:\", data);\n          const options = {\n            method: \"GET\",\n            headers: {\n              Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n            },\n          };\n          // fetch(\"http://127.0.0.1:8000/save_booking_time\", {\n          //     method: \"POST\",\n          //     body: JSON.stringify(user),\n          //     headers: {\n          //       \"Content-Type\": \"application/json\",\n          //     },\n          //   }).catch((error) => {\n          //     console.error(\"Fetch error:\", error);\n          //     // Handle the error or display it to the user\n          //   });\n          fetch(\"http://127.0.0.1:8000/getVandS\", options)\n            .then((response) => response.json())\n            .then((data) => {\n              console.log(\"from backend\", data);\n              this.venues = data;\n            });\n        });\n    },\n  },\n\n  async mounted() {\n    console.log(\"User Dashboard\");\n    await this.fetchData();\n  },\n};\n</script>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}