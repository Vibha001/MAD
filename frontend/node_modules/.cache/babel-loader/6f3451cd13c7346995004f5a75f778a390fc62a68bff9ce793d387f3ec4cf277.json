{"ast":null,"code":"import LogOutButton from \"./Logout.vue\";\nimport Rate from \"../components/Rate.vue\";\nexport default {\n  name: \"Boo-kings\",\n  components: {\n    LogOutButton,\n    Rate\n  },\n  data() {\n    return {\n      username: \"\",\n      userData: [],\n      identityObject: JSON.parse(localStorage.getItem(\"identity\"))\n    };\n  },\n  methods: {\n    async handleRating(showId, rating) {\n      console.log(rating);\n      const options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n        },\n        body: JSON.stringify({\n          rating: rating\n        })\n      };\n      try {\n        const response = await fetch(`http://127.0.0.1:8000/rating/${showId}`, options);\n        if (response.ok) {\n          const data = await response.json();\n          console.log(\"Rating added:\", data);\n\n          // After successfully adding the rating, fetch updated user data\n          this.fetchUserData();\n        } else {\n          console.error(\"Failed to add rating\");\n        }\n      } catch (error) {\n        console.error(\"Error adding rating:\", error);\n      }\n    },\n    async fetchUserData() {\n      try {\n        const storedData = localStorage.getItem(\"identity\");\n        if (storedData) {\n          const identityObject = JSON.parse(storedData);\n          this.username = identityObject.username;\n        }\n        const options = {\n          method: \"GET\",\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n          }\n        };\n        const response = await fetch(`http://127.0.0.1:8000/user_booked_shows/${this.identityObject.id}`, options);\n        if (response.ok) {\n          const data = await response.json();\n          console.log(\"got data from backend\", data);\n          this.userData = data;\n        } else {\n          console.error(\"Failed to fetch user data\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    }\n  },\n  async mounted() {\n    console.log(\"User Dashboard\");\n    await this.fetchUserData();\n  }\n};","map":{"version":3,"names":["LogOutButton","Rate","name","components","data","username","userData","identityObject","JSON","parse","localStorage","getItem","methods","handleRating","showId","rating","console","log","options","method","headers","Authorization","body","stringify","response","fetch","ok","json","fetchUserData","error","storedData","id","mounted"],"sources":["src/views/Bookings.vue"],"sourcesContent":["<template>\n  <div class=\"container-fluid\">\n    <nav\n      class=\"navbar navbar-expand-lg navbar-light bg-light fixed-top\"\n      style=\"font-size: 24px; padding: 20px\"\n    >\n      <h4>{{ username }}'s Dashboard</h4>\n      |\n      <br />\n      <router-link to=\"/user_dashboard\"> User Dashboard </router-link> |<br />\n      <router-link to=\"/bookings\"> Bookings </router-link> |<br />\n      <router-link to=\"/profile\"> Profile </router-link> |<br />\n      <LogOutButton />\n    </nav>\n\n    <div>\n      <div\n        v-if=\"\n          userData && userData.booked_shows && userData.booked_shows.length > 0\n        \"\n      >\n        <!-- Your booking card components here -->\n        <div\n          v-for=\"(booking, index) in userData.booked_shows\"\n          :key=\"index\"\n          class=\"booking-card\"\n        >\n          <div class=\"card my-3 mx-3\" style=\"width: 100%\">\n            <div class=\"card-body\">\n              <p class=\"card-text\">\n                <span class=\"Bold\"\n                  >{{ booking.venue.vname }} - {{ booking.show.sname }}</span\n                >\n                <span class=\"Bold\">Show Timing: {{ booking.show.time }}</span>\n                <span class=\"Bold\">Price: {{ booking.price }}</span>\n                <span class=\"Bold\">Booked on: {{ booking.date }}</span>\n                <span class=\"Bold\">Ratings : {{ booking.show.srate }}</span>\n              </p>\n              <rate\n                v-model=\"booking.show.srate\"\n                :maxStars=\"5\"\n                @rate=\"handleRating(booking.show.sid, $event)\"\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n      <div v-else>\n        <p>No shows booked yet.</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport LogOutButton from \"./Logout.vue\";\nimport Rate from \"../components/Rate.vue\";\n\nexport default {\n  name: \"Boo-kings\",\n\n  components: {\n    LogOutButton,\n    Rate,\n  },\n\n  data() {\n    return {\n      username: \"\",\n      userData: [],\n      identityObject: JSON.parse(localStorage.getItem(\"identity\")),\n    };\n  },\n\n  methods: {\n    async handleRating(showId, rating) {\n      console.log(rating);\n      const options = {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n        body: JSON.stringify({ rating: rating }),\n      };\n\n      try {\n        const response = await fetch(\n          `http://127.0.0.1:8000/rating/${showId}`,\n          options\n        );\n\n        if (response.ok) {\n          const data = await response.json();\n          console.log(\"Rating added:\", data);\n\n          // After successfully adding the rating, fetch updated user data\n          this.fetchUserData();\n        } else {\n          console.error(\"Failed to add rating\");\n        }\n      } catch (error) {\n        console.error(\"Error adding rating:\", error);\n      }\n    },\n\n    async fetchUserData() {\n      try {\n        const storedData = localStorage.getItem(\"identity\");\n        if (storedData) {\n          const identityObject = JSON.parse(storedData);\n          this.username = identityObject.username;\n        }\n\n        const options = {\n          method: \"GET\",\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n          },\n        };\n\n        const response = await fetch(\n          `http://127.0.0.1:8000/user_booked_shows/${this.identityObject.id}`,\n          options\n        );\n\n        if (response.ok) {\n          const data = await response.json();\n          console.log(\"got data from backend\", data);\n          this.userData = data;\n        } else {\n          console.error(\"Failed to fetch user data\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    },\n  },\n\n  async mounted() {\n    console.log(\"User Dashboard\");\n    await this.fetchUserData();\n  },\n};\n</script>\n\n<style scoped>\n.card-text {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.Bold {\n  font-weight: bold;\n}\n</style>\n"],"mappings":"AAuDA,OAAAA,YAAA;AACA,OAAAC,IAAA;AAEA;EACAC,IAAA;EAEAC,UAAA;IACAH,YAAA;IACAC;EACA;EAEAG,KAAA;IACA;MACAC,QAAA;MACAC,QAAA;MACAC,cAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IACA;EACA;EAEAC,OAAA;IACA,MAAAC,aAAAC,MAAA,EAAAC,MAAA;MACAC,OAAA,CAAAC,GAAA,CAAAF,MAAA;MACA,MAAAG,OAAA;QACAC,MAAA;QACAC,OAAA;UACA;UACAC,aAAA,cAAAX,YAAA,CAAAC,OAAA;QACA;QACAW,IAAA,EAAAd,IAAA,CAAAe,SAAA;UAAAR,MAAA,EAAAA;QAAA;MACA;MAEA;QACA,MAAAS,QAAA,SAAAC,KAAA,CACA,gCAAAX,MAAA,IACAI,OACA;QAEA,IAAAM,QAAA,CAAAE,EAAA;UACA,MAAAtB,IAAA,SAAAoB,QAAA,CAAAG,IAAA;UACAX,OAAA,CAAAC,GAAA,kBAAAb,IAAA;;UAEA;UACA,KAAAwB,aAAA;QACA;UACAZ,OAAA,CAAAa,KAAA;QACA;MACA,SAAAA,KAAA;QACAb,OAAA,CAAAa,KAAA,yBAAAA,KAAA;MACA;IACA;IAEA,MAAAD,cAAA;MACA;QACA,MAAAE,UAAA,GAAApB,YAAA,CAAAC,OAAA;QACA,IAAAmB,UAAA;UACA,MAAAvB,cAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAqB,UAAA;UACA,KAAAzB,QAAA,GAAAE,cAAA,CAAAF,QAAA;QACA;QAEA,MAAAa,OAAA;UACAC,MAAA;UACAC,OAAA;YACAC,aAAA,cAAAX,YAAA,CAAAC,OAAA;UACA;QACA;QAEA,MAAAa,QAAA,SAAAC,KAAA,CACA,gDAAAlB,cAAA,CAAAwB,EAAA,IACAb,OACA;QAEA,IAAAM,QAAA,CAAAE,EAAA;UACA,MAAAtB,IAAA,SAAAoB,QAAA,CAAAG,IAAA;UACAX,OAAA,CAAAC,GAAA,0BAAAb,IAAA;UACA,KAAAE,QAAA,GAAAF,IAAA;QACA;UACAY,OAAA,CAAAa,KAAA;QACA;MACA,SAAAA,KAAA;QACAb,OAAA,CAAAa,KAAA,yBAAAA,KAAA;MACA;IACA;EACA;EAEA,MAAAG,QAAA;IACAhB,OAAA,CAAAC,GAAA;IACA,WAAAW,aAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}