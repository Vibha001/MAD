{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Vue from \"vue\"; // Import Vue\nimport VueRouter from \"vue-router\"; // Import Vue Router\n\nVue.use(VueRouter); // Use Vue Router\n\n// import { onMounted } from \"vue\";\nexport default {\n  name: \"AdminLogin\",\n  // setup() {\n  mounted() {\n    console.log(\"admin login mounted\");\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      alert(\"Logout first\");\n      this.flag = true;\n      // this.$router.push(\"/admin_dashboard\");\n    }\n\n    if (this.flag) {\n      this.$router.push(\"/admin_dashboard\");\n    }\n    // } else {\n    //   this.$router.push(\"/admin_login\");\n    // }\n  },\n\n  // },\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      username: \"\",\n      error: \"\",\n      error_message: \"\"\n    };\n  },\n  methods: {\n    submit: function () {\n      let data = {\n        email: this.email,\n        password: this.password,\n        username: this.username\n      };\n\n      // Initialize error and error_message\n      // eslint-disable-next-line\n      let error = false;\n      // eslint-disable-next-line\n      let error_message = \"\";\n      fetch(\"http://127.0.0.1:8000/login_admin\", {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(response => response.json()).then(rdata => {\n        console.log(rdata);\n        if (rdata.access_token) {\n          localStorage.setItem(\"token\", rdata.access_token);\n          localStorage.setItem(\"role\", rdata.role);\n          // Correct way to save data to localStorage\n          localStorage.setItem(\"identity\", JSON.stringify({\n            email: rdata.identity.email,\n            id: rdata.identity.id,\n            username: rdata.identity.username\n          }));\n          const identityObject = JSON.parse(localStorage.getItem(\"identity\"));\n\n          // const id = identityObject.id;\n          const data = {\n            id: identityObject.id\n          };\n          fetch(\"http://127.0.0.1:8000/save_login_time\", {\n            method: \"POST\",\n            body: JSON.stringify(data),\n            headers: {\n              \"Content-Type\": \"application/json\"\n            }\n          }).catch(error => {\n            console.error(\"Fetch error:\", error);\n            // Handle the error or display it to the user\n          });\n          // localStorage.setItem(\"identity\", JSON.stringify(rdata.idenntity));\n          this.$router.push(\"/admin_dashboard\");\n        } else {\n          this.error = true;\n          this.error_message = rdata.message;\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["Vue","VueRouter","use","name","mounted","console","log","token","localStorage","getItem","alert","flag","$router","push","data","email","password","username","error","error_message","methods","submit","fetch","method","body","JSON","stringify","headers","then","response","json","rdata","access_token","setItem","role","identity","id","identityObject","parse","catch","message"],"sources":["src/views/AdminLogin.vue"],"sourcesContent":["<template>\n  <form @submit.prevent=\"submit\">\n    <div class=\"text-danger\" role=\"alert\" v-if=\"error\">\n      {{ error_message }}\n    </div>\n    <div class=\"mx-auto col-10 col-md-8 col-lg-6\">\n      <div class=\"form-group\">\n        <label for=\"email\">Admin Email Address</label>\n        <input\n          type=\"email\"\n          class=\"form-control mt-1\"\n          id=\"email\"\n          name=\"email\"\n          placeholder=\"Enter email\"\n          required\n          v-model=\"email\"\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"exampleInputPassword1\">Admin Password</label>\n        <input\n          type=\"password\"\n          class=\"form-control mt-1\"\n          id=\"exampleInputPassword1\"\n          placeholder=\"Password\"\n          name=\"password\"\n          required\n          v-model=\"password\"\n        />\n      </div>\n      <br />\n      <button class=\"btn btn-primary btn-lg btn-block\" type=\"submit\">\n        Login\n      </button>\n    </div>\n    <br />\n    <h5>\n      Are you new here? Register as\n      <router-link to=\"/admin_reg\">Admin</router-link>\n    </h5>\n  </form>\n</template>\n\n<script>\nimport Vue from \"vue\"; // Import Vue\nimport VueRouter from \"vue-router\"; // Import Vue Router\n\nVue.use(VueRouter); // Use Vue Router\n\n// import { onMounted } from \"vue\";\nexport default {\n  name: \"AdminLogin\",\n  // setup() {\n  mounted() {\n    console.log(\"admin login mounted\");\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      alert(\"Logout first\");\n      this.flag = true;\n      // this.$router.push(\"/admin_dashboard\");\n    }\n    if (this.flag) {\n      this.$router.push(\"/admin_dashboard\");\n    }\n    // } else {\n    //   this.$router.push(\"/admin_login\");\n    // }\n  },\n  // },\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      username: \"\",\n      error: \"\",\n      error_message: \"\",\n    };\n  },\n  methods: {\n    submit: function () {\n      let data = {\n        email: this.email,\n        password: this.password,\n        username: this.username,\n      };\n\n      // Initialize error and error_message\n      // eslint-disable-next-line\n      let error = false;\n      // eslint-disable-next-line\n      let error_message = \"\";\n\n      fetch(\"http://127.0.0.1:8000/login_admin\", {\n        method: \"POST\",\n        body: JSON.stringify(data),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n        .then((response) => response.json())\n        .then((rdata) => {\n          console.log(rdata);\n\n          if (rdata.access_token) {\n            localStorage.setItem(\"token\", rdata.access_token);\n            localStorage.setItem(\"role\", rdata.role);\n            // Correct way to save data to localStorage\n            localStorage.setItem(\n              \"identity\",\n              JSON.stringify({\n                email: rdata.identity.email,\n                id: rdata.identity.id,\n                username: rdata.identity.username,\n              })\n            );\n            const identityObject = JSON.parse(localStorage.getItem(\"identity\"));\n\n            // const id = identityObject.id;\n            const data = { id: identityObject.id };\n            fetch(\"http://127.0.0.1:8000/save_login_time\", {\n              method: \"POST\",\n              body: JSON.stringify(data),\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n            }).catch((error) => {\n              console.error(\"Fetch error:\", error);\n              // Handle the error or display it to the user\n            });\n            // localStorage.setItem(\"identity\", JSON.stringify(rdata.idenntity));\n            this.$router.push(\"/admin_dashboard\");\n          } else {\n            this.error = true;\n            this.error_message = rdata.message;\n          }\n        });\n    },\n  },\n};\n</script>\n"],"mappings":";AA4CA,OAAAA,GAAA;AACA,OAAAC,SAAA;;AAEAD,GAAA,CAAAE,GAAA,CAAAD,SAAA;;AAEA;AACA;EACAE,IAAA;EACA;EACAC,QAAA;IACAC,OAAA,CAAAC,GAAA;IACA,MAAAC,KAAA,GAAAC,YAAA,CAAAC,OAAA;IAEA,IAAAF,KAAA;MACAG,KAAA;MACA,KAAAC,IAAA;MACA;IACA;;IACA,SAAAA,IAAA;MACA,KAAAC,OAAA,CAAAC,IAAA;IACA;IACA;IACA;IACA;EACA;;EACA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,QAAA;MACAC,QAAA;MACAC,KAAA;MACAC,aAAA;IACA;EACA;EACAC,OAAA;IACAC,MAAA,WAAAA,CAAA;MACA,IAAAP,IAAA;QACAC,KAAA,OAAAA,KAAA;QACAC,QAAA,OAAAA,QAAA;QACAC,QAAA,OAAAA;MACA;;MAEA;MACA;MACA,IAAAC,KAAA;MACA;MACA,IAAAC,aAAA;MAEAG,KAAA;QACAC,MAAA;QACAC,IAAA,EAAAC,IAAA,CAAAC,SAAA,CAAAZ,IAAA;QACAa,OAAA;UACA;QACA;MACA,GACAC,IAAA,CAAAC,QAAA,IAAAA,QAAA,CAAAC,IAAA,IACAF,IAAA,CAAAG,KAAA;QACA1B,OAAA,CAAAC,GAAA,CAAAyB,KAAA;QAEA,IAAAA,KAAA,CAAAC,YAAA;UACAxB,YAAA,CAAAyB,OAAA,UAAAF,KAAA,CAAAC,YAAA;UACAxB,YAAA,CAAAyB,OAAA,SAAAF,KAAA,CAAAG,IAAA;UACA;UACA1B,YAAA,CAAAyB,OAAA,CACA,YACAR,IAAA,CAAAC,SAAA;YACAX,KAAA,EAAAgB,KAAA,CAAAI,QAAA,CAAApB,KAAA;YACAqB,EAAA,EAAAL,KAAA,CAAAI,QAAA,CAAAC,EAAA;YACAnB,QAAA,EAAAc,KAAA,CAAAI,QAAA,CAAAlB;UACA,EACA;UACA,MAAAoB,cAAA,GAAAZ,IAAA,CAAAa,KAAA,CAAA9B,YAAA,CAAAC,OAAA;;UAEA;UACA,MAAAK,IAAA;YAAAsB,EAAA,EAAAC,cAAA,CAAAD;UAAA;UACAd,KAAA;YACAC,MAAA;YACAC,IAAA,EAAAC,IAAA,CAAAC,SAAA,CAAAZ,IAAA;YACAa,OAAA;cACA;YACA;UACA,GAAAY,KAAA,CAAArB,KAAA;YACAb,OAAA,CAAAa,KAAA,iBAAAA,KAAA;YACA;UACA;UACA;UACA,KAAAN,OAAA,CAAAC,IAAA;QACA;UACA,KAAAK,KAAA;UACA,KAAAC,aAAA,GAAAY,KAAA,CAAAS,OAAA;QACA;MACA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}