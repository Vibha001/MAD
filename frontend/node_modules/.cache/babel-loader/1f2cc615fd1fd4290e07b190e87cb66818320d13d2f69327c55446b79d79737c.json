{"ast":null,"code":"export default {\n  name: \"AddTheatre\",\n  data() {\n    return {\n      showData: {\n        name: \"\",\n        loc: \"\",\n        cap: \"\",\n        image: null\n      }\n    };\n  },\n  methods: {\n    saveChanges() {\n      // Emit the 'addShow' event with an object containing both id and showData\n      this.$emit(\"addT\", this.showData);\n\n      //   this.$emit(\"addT\", {\n      //     showData: {\n      //       name: this.showData.name,\n      //       cap: this.showData.cap,\n      //       loc: this.showData.loc,\n      //       image: this.showData.image,\n      //     },\n      //   });\n\n      // Clear the input fields after emitting the event\n      this.showData = {\n        name: \"\",\n        loc: \"\",\n        cap: \"\",\n        image: null\n      };\n    },\n    handleImageUpload(event) {\n      // Handle the image upload and store it in the 'showData' object\n      this.showData.image = event.target.files[0];\n    }\n  }\n};","map":{"version":3,"names":["name","data","showData","loc","cap","image","methods","saveChanges","$emit","handleImageUpload","event","target","files"],"sources":["src/components/AddTheatre.vue"],"sourcesContent":["<template>\n  <div>\n    <button\n      type=\"button\"\n      class=\"btn btn-outline-success btn-lg rounded-3\"\n      data-bs-toggle=\"modal\"\n      data-bs-target=\"#staticBackdropAddTheatre\"\n    >\n      Add Theatre\n    </button>\n    <div>\n      <!-- Button trigger modal -->\n      <div\n        id=\"staticBackdropAddTheatre\"\n        class=\"modal fade\"\n        data-bs-backdrop=\"static\"\n        data-bs-keyboard=\"false\"\n        tabindex=\"-1\"\n        aria-labelledby=\"staticBackdropLabel\"\n        aria-hidden=\"true\"\n      >\n        <div class=\"modal-dialog\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\" id=\"staticBackdropLabel\">Add Theatre</h5>\n              <button\n                type=\"button\"\n                class=\"btn-close\"\n                data-bs-dismiss=\"modal\"\n                aria-label=\"Close\"\n              ></button>\n            </div>\n            <div class=\"modal-body\">\n              <div class=\"my-4\">\n                <label>Name of the Theatre :</label>\n                <input v-model=\"showData.name\" type=\"text\" required />\n              </div>\n              <div class=\"my-4\">\n                <label>Location of Theatre :</label>\n                <input v-model=\"showData.loc\" type=\"text\" required />\n              </div>\n              <div class=\"my-4\">\n                <label>Capacity of Theatre :</label>\n                <input v-model=\"showData.cap\" type=\"text\" required />\n              </div>\n              <div class=\"my-4\">\n                <label>Upload Theatre View Image :</label>\n                <input\n                  type=\"file\"\n                  @change=\"handleImageUpload\"\n                  accept=\"image/*\"\n                />\n              </div>\n            </div>\n            <div class=\"modal-footer\">\n              <button\n                type=\"button\"\n                class=\"btn btn-secondary\"\n                data-bs-dismiss=\"modal\"\n              >\n                Close\n              </button>\n              <button\n                type=\"button\"\n                @click=\"saveChanges\"\n                class=\"btn btn-primary\"\n                data-bs-dismiss=\"modal\"\n              >\n                Submit\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"AddTheatre\",\n  data() {\n    return {\n      showData: {\n        name: \"\",\n        loc: \"\",\n        cap: \"\",\n        image: null,\n      },\n    };\n  },\n  methods: {\n    saveChanges() {\n      // Emit the 'addShow' event with an object containing both id and showData\n      this.$emit(\"addT\", this.showData);\n\n      //   this.$emit(\"addT\", {\n      //     showData: {\n      //       name: this.showData.name,\n      //       cap: this.showData.cap,\n      //       loc: this.showData.loc,\n      //       image: this.showData.image,\n      //     },\n      //   });\n\n      // Clear the input fields after emitting the event\n      this.showData = {\n        name: \"\",\n        loc: \"\",\n        cap: \"\",\n        image: null,\n      };\n    },\n    handleImageUpload(event) {\n      // Handle the image upload and store it in the 'showData' object\n      this.showData.image = event.target.files[0];\n    },\n  },\n};\n</script>\n"],"mappings":"AA+EA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;QACAF,IAAA;QACAG,GAAA;QACAC,GAAA;QACAC,KAAA;MACA;IACA;EACA;EACAC,OAAA;IACAC,YAAA;MACA;MACA,KAAAC,KAAA,cAAAN,QAAA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA,KAAAA,QAAA;QACAF,IAAA;QACAG,GAAA;QACAC,GAAA;QACAC,KAAA;MACA;IACA;IACAI,kBAAAC,KAAA;MACA;MACA,KAAAR,QAAA,CAAAG,KAAA,GAAAK,KAAA,CAAAC,MAAA,CAAAC,KAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}